# docker-compose ignores x-
x-PYROSCOPE_CPUS: &PYROSCOPE_CPUS 1
x-PYROSCOPE_MEMORY: &PYROSCOPE_MEMORY 4096MB
x-HOTROD_CPUS: &HOTROD_CPUS 0.2
x-HOTROD_MEM: &HOTROD_MEM 512MB

version: "3.9"
services:
  client:
    build:
      context: ../
      dockerfile: benchmark/Dockerfile
    # we will be running docker exec against it
    command:
    - sh
    - -c
    - sleep Infinity
  hotrod_without_pyroscope:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
    - 8081:8080
    - 5051:5050 # pprof
    deploy:
      resources:
        limits:
          cpus: *HOTROD_CPUS
          memory: *HOTROD_MEM
  hotrod_with_pyroscope:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
    - 5050:5050 # pprof
    environment:
    - PYROSCOPE_ADDRESS=http://pyroscope:4040
    deploy:
      resources:
        limits:
          cpus: *HOTROD_CPUS
          memory: *HOTROD_MEM
  pyroscope:
    environment:
      - PYROSCOPE_LOG_LEVEL=info
      - PYROSCOPE_WAIT_AFTER_STOP=true
    build:
      context: ../
      dockerfile: Dockerfile
    command:
      - server
    ports:
      - 4040:4040
    deploy:
      resources:
        limits:
          cpus: *PYROSCOPE_CPUS
          memory: *PYROSCOPE_MEMORY
  prometheus:
    image: prom/prometheus:v2.27.1
    volumes:
      - ./prometheus:/etc/prometheus/
      - data-prometheus:/prometheus
    ports:
      - 4090:9090
  grafana:
    user: grafana
    image: grafana/grafana:7.5.7
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana-provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana-provisioning/dashboards/main.yml:/etc/grafana/provisioning/dashboards/main.yml
      - ../monitoring/gen/go-agent-benchmark-pr.json:/etc/grafana/provisioning/dashboards/go-agent-benchmark-pr.json:ro
    ports:
    - 4050:3000
    environment:
      GF_RENDERING_SERVER_URL: http://renderer:8081/render
      GF_RENDERING_CALLBACK_URL: http://grafana:3000/
      GF_LOG_FILTERS: rendering:debug
  renderer:
    image: grafana/grafana-image-renderer:latest
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
    - 5080:8080
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
volumes:
  data-prometheus:
    driver: local
