# docker-compose ignores x-
x-PYROSCOPE_CPUS: &PYROSCOPE_CPUS 1
x-PYROSCOPE_MEMORY: &PYROSCOPE_MEMORY 4096MB
x-HOTROD_CPUS: &HOTROD_CPUS 1
x-HOTROD_MEM: &HOTROD_MEM 128MB

version: "3.9"
services:
  client:
    build:
      context: ../
      dockerfile: benchmark/Dockerfile
    # we will be running docker exec against it
    command:
    - sh
    - -c
    - sleep Infinity
    volumes:
    - ./dashboard-screenshots:/screenshots
    - ./report.yaml:/report.yaml
  hotrod_without_pyroscope:
    build:
      context: ../
      dockerfile: agent-benchmark/Dockerfile
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
    deploy:
      resources:
        limits:
          cpus: *HOTROD_CPUS
          memory: *HOTROD_MEM
  hotrod_with_pyroscope:
    build:
      context: ../
      dockerfile: agent-benchmark/Dockerfile
    environment:
    - PYROSCOPE_ADDRESS=http://pyroscope:4040
    - JAEGER_AGENT_HOST=jaeger
    - JAEGER_AGENT_PORT=6831
      #    ports:
      #      - '8080:8080'
      #      - '8083:8083'
    deploy:
      resources:
        limits:
          cpus: *HOTROD_CPUS
          memory: *HOTROD_MEM
  pyroscope:
    environment:
      - PYROSCOPE_LOG_LEVEL=info
      - PYROSCOPE_WAIT_AFTER_STOP=true
    build:
      context: ../
      dockerfile: Dockerfile
    command:
      - server
    ports:
      - 4040:4040
    deploy:
      resources:
        limits:
          cpus: *PYROSCOPE_CPUS
          memory: *PYROSCOPE_MEMORY

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - '6831:6831'
      - '16686:16686'

  prometheus:
    image: prom/prometheus:v2.27.1
    volumes:
      - ./prometheus:/etc/prometheus/
    ports:
      - 4090:9090
  grafana:
    user: grafana
    image: grafana/grafana:7.5.7
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana-provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana-provisioning/dashboards/main.yml:/etc/grafana/provisioning/dashboards/main.yml
      - ../monitoring/gen/go-agent-benchmark-pr.json:/etc/grafana/provisioning/dashboards/go-agent-benchmark-pr.json:ro
    ports:
    - 4050:3000
    environment:
      GF_RENDERING_SERVER_URL: http://renderer:8081/render
      GF_RENDERING_CALLBACK_URL: http://grafana:3000/
      GF_LOG_FILTERS: rendering:debug
  renderer:
    image: grafana/grafana-image-renderer:latest
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    ports:
    - 5080:8080
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
